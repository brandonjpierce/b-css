/**
 * b-css border package
 */

@custom-media --breakpoint-sm (min-width: 40em);
@custom-media --breakpoint-md (min-width: 52em);
@custom-media --breakpoint-lg (min-width: 64em);

:root {
  --border-width: 1;
  --border-style: solid;
}

.xs-b {
  border-width: var(--border-width);
  border-style: var(--border-style);
}

.xs-no-b { border: none; }

@each $selector, $property in (t,r,l,b), (top, right, left, bottom) {
  .xs-b$(selector) {
    border-$(property)-width: var(--border-width);
    border-$(property)-style: var(--border-style);
  }

  .xs-no-b$(selector) { border-$(property): none; }
}

@media (--breakpoint-sm) {
  .sm-b {
    border-width: var(--border-width);
    border-style: var(--border-style);
  }

  .sm-no-b { border: none; }

  @each $selector, $property in (t,r,l,b), (top, right, left, bottom) {
    .sm-b$(selector) {
      border-$(property)-width: var(--border-width);
      border-$(property)-style: var(--border-style);
    }

    .sm-no-b$(selector) { border-$(property): none; }
  }
}

@media (--breakpoint-md) {
  .md-b {
    border-width: var(--border-width);
    border-style: var(--border-style);
  }

  .md-no-b { border: none; }

  @each $selector, $property in (t,r,l,b), (top, right, left, bottom) {
    .md-b$(selector) {
      border-$(property)-width: var(--border-width);
      border-$(property)-style: var(--border-style);
    }

    .md-no-b$(selector) { border-$(property): none; }
  }
}

@media (--breakpoint-lg) {
  .lg-b {
    border-width: var(--border-width);
    border-style: var(--border-style);
  }

  .lg-no-b { border: none; }

  @each $selector, $property in (t,r,l,b), (top, right, left, bottom) {
    .lg-b$(selector) {
      border-$(property)-width: var(--border-width);
      border-$(property)-style: var(--border-style);
    }

    .lg-no-b$(selector) { border-$(property): none; }
  }
}
